events {}

http {
  # Upstream backend (adjust address/port)
  upstream backend {
    server chat-server:8000;
    # Add more backend server lines for load balancing if needed
  }

  # Redirect all HTTP to HTTPS
  server {
    listen 80;
    server_name your-domain.com;

    # Allow Let's Encrypt certificate renewal
    location /.well-known/acme-challenge/ {
      root /var/www/html;
      try_files $uri =404;
    }

    # Redirect everything else
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    http2 on;
    #server_name your-domain.com;

    # TLS certificate and key
    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # Strong protocols and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # HSTS (optional)
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Proxy settings
    location / {
      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # WebSocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }
}
